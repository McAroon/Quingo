<MudGrid Class="pb-15">
    <MudItem xs="12" md="6">
        <PlayerActionBar/>
    </MudItem>
    <MudItem xs="12" md="6">
        <PlayerStats/>
    </MudItem>
    <MudBreakpointProvider @ref="_breakpoint">
        <MudItem xs="12">
            <MudGrid>
                <MudItem xs="12" md="3" lg="2" Class="@QuestionsClass">
                    <MudText Typo="Typo.h5" GutterBottom>Draw History (@Player.DrawState.DrawnNodes.Count&nbsp;/&nbsp;@Player.DrawState.QuestionCount)</MudText>
                    <QuestionList DrawState="Player.DrawState" ShowDetails="ShowDetails" Row="QuestionsRow" />
                </MudItem>
                <MudItem xs="12" md="9" lg="10">
                    <MudText Typo="Typo.h5" GutterBottom>Player Card</MudText>
                    <PlayerCard ShowDetails="ShowDetails"/>
                </MudItem>
            </MudGrid>
        </MudItem>
    </MudBreakpointProvider>
    <MudItem xs="12">
        <MudText Typo="Typo.h5" GutterBottom>Players (@DisplayPlayerCount)</MudText>
        <CascadingValue Value="Player.GameState">
            <PlayerList Player="Player" ShowDetails="ShowDetails"/>
        </CascadingValue>
    </MudItem>
</MudGrid>

@code {
    [CascadingParameter] public PlayerState Player { get; set; } = default!;

    private bool ShowDetails => Player.GameState.State is GameStateEnum.Finished or GameStateEnum.Canceled;

    private MudBreakpointProvider? _breakpoint;

    private bool QuestionsRow => _breakpoint == null || _breakpoint.Breakpoint is Breakpoint.Always or Breakpoint.Sm or Breakpoint.Xs;

    private string? QuestionsClass => !QuestionsRow ? "q-list-container-col" : null;

    private string DisplayPlayerCount => Player.GameState.Preset.MaxPlayers > 0 
        ? $"{Player.GameState.Players.Count} / {Player.GameState.Preset.MaxPlayers}" 
        : Player.GameState.Players.Count.ToString();

}