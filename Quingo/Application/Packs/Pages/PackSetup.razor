@page "/game/setup/pack"
@page "/game/setup/pack/{PackId:int}"

@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims

@inject ApplicationDbContext Db
@inject NavigationManager NavigationManager

@attribute [Authorize]

<PageTitle>Pack</PageTitle>

<MudText Typo="Typo.h3" GutterBottom>@(IsCreate ? "Create" : "Edit") Pack</MudText>

<MudText Typo="Typo.h4" GutterBottom>
    Pack Info @if (!IsEditMode)
    {
        <MudTooltip Text="Edit Pack info">
            <MudIconButton Icon="@Icons.Material.Filled.Edit" OnClick="() => IsEditMode = true"></MudIconButton>
        </MudTooltip>
    }
</MudText>

@if (Pack == null && !IsCreate)
{
    <MudText><em>Loading...</em></MudText>
}
else if (IsEditMode)
{
    <MudGrid>
        <MudItem xs="12" md="4">
            <EditForm Model="Input" method="post" OnValidSubmit="SavePack" FormName="save">
                <DataAnnotationsValidator />
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="Pack Name" @bind-Value="Input.Name" For="@(() => Input.Name)" Required />
                        <MudTextField Label="Description" @bind-Value="Input.Description" For="@(() => Input.Description)" />
                        <MudTextField Label="Image Url" @bind-Value="Input.ImageUrl" For="@(() => Input.ImageUrl)" />
                    </MudCardContent>
                    <MudCardActions>
                        <div class="ml-auto">
                            <MudButton ButtonType="ButtonType.Submit" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Save">Save</MudButton>
                            <MudButton Color="Color.Secondary" OnClick="() => IsEditMode = false" StartIcon="@Icons.Material.Filled.Cancel">Cancel</MudButton>
                        </div>
                    </MudCardActions>
                </MudCard>
            </EditForm>
        </MudItem>
    </MudGrid>
}
else
{
    <MudGrid>
        <MudItem xs="12" md="4">
            <MudList T="string" ReadOnly>
                <MudListItem Text="Pack Name" SecondaryText="@(!string.IsNullOrEmpty(Pack?.Name) ? Pack.Name : "-")" />
                <MudListItem Text="Description" SecondaryText="@(!string.IsNullOrEmpty(Pack?.Description) ? Pack.Description : "-")" />
                <MudListItem Text="Image Url" SecondaryText="@(!string.IsNullOrEmpty(Pack?.ImageUrl) ? Pack.ImageUrl : "-")" />
            </MudList>
        </MudItem>
    </MudGrid>
}


@if (Pack != null && !IsCreate)
{
    <CascadingValue Value="Pack">
        <TagsEdit />
        <NodeLinksEdit />
        <PresetEdit />
        <NodesEdit />
    </CascadingValue>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }

    [Parameter]
    public int? PackId { get; set; }

    public Pack? Pack { get; set; }

    public string? UserId { get; set; }

    [SupplyParameterFromForm]
    private PackModel Input { get; set; } = new();

    private bool IsCreate => PackId == null;

    public bool IsEditMode { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (PackId != null)
        {
            Pack = await Db.PacksWithIncludes
            .FirstOrDefaultAsync(x => x.Id == PackId);
        }
        
        if (AuthenticationState != null)
        {
            UserId = (await AuthenticationState)?.User?.FindFirstValue(ClaimTypes.NameIdentifier);
        }

        if (PackId != null && (Pack == null || UserId != Pack.CreatedByUserId))
        {
            NavigationManager.NavigateTo("game/setup/pack");
        }

        Input.Name ??= Pack?.Name ?? "";
        Input.Description ??= Pack?.Description ?? "";
        Input.ImageUrl ??= Pack?.ImageUrl ?? "";

        IsEditMode = IsCreate;
    }

    public async Task SavePack(EditContext editContext)
    {
        Pack ??= new Pack();
        Pack.Name = Input.Name;
        Pack.Description = Input.Description;
        Pack.ImageUrl = Input.ImageUrl;

        Db.Update(Pack);
        await Db.SaveChangesAsync();

        IsEditMode = false;

        if (IsCreate)
        {
            NavigationManager.NavigateTo($"game/setup/pack/{Pack.Id}");
        }
    }


}
